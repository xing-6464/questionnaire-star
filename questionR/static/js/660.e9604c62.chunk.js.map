{"version":3,"file":"static/js/660.e9604c62.chunk.js","mappings":"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","sources":["components/QuestionComponents/QuestionInput/interface.ts","components/QuestionComponents/QuestionInput/Component.tsx","components/QuestionComponents/QuestionInput/PropComponent.tsx","components/QuestionComponents/QuestionInput/index.ts","components/QuestionComponents/QuestionTitle/interface.ts","components/QuestionComponents/QuestionTitle/Component.tsx","components/QuestionComponents/QuestionTitle/PropComponent.tsx","components/QuestionComponents/QuestionTitle/index.ts","components/QuestionComponents/QuestionParagraph/interface.ts","components/QuestionComponents/QuestionParagraph/Component.tsx","components/QuestionComponents/QuestionParagraph/index.ts","components/QuestionComponents/QuestionParagraph/PropComponent.tsx","components/QuestionComponents/QuestionInfo/interface.ts","components/QuestionComponents/QuestionInfo/index.ts","components/QuestionComponents/QuestionInfo/Component.tsx","components/QuestionComponents/QuestionInfo/PropComponent.tsx","components/QuestionComponents/QuestionTextarea/interface.ts","components/QuestionComponents/QuestionTextarea/Component.tsx","components/QuestionComponents/QuestionTextarea/index.ts","components/QuestionComponents/QuestionTextarea/PropComponent.tsx","components/QuestionComponents/QuestionRadio/interface.ts","components/QuestionComponents/QuestionRadio/Component.tsx","components/QuestionComponents/QuestionRadio/PropComponent.tsx","components/QuestionComponents/QuestionRadio/StatComponent.tsx","components/QuestionComponents/QuestionRadio/index.ts","components/QuestionComponents/QuestionCheckbox/interface.ts","components/QuestionComponents/QuestionCheckbox/Component.tsx","components/QuestionComponents/QuestionCheckbox/PropComponent.tsx","components/QuestionComponents/QuestionCheckbox/StatComponent.tsx","components/QuestionComponents/QuestionCheckbox/index.ts","components/QuestionComponents/index.ts","hooks/useGetComponentInfo.ts","hooks/useGetPageInfo.ts","hooks/useLoadQuestionData.ts"],"sourcesContent":["export type QuestionInputPropsType = {\r\n  title?: string\r\n  placeholder?: string\r\n  onChange?: (newProps: QuestionInputPropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const questionInputDefaultProps: QuestionInputPropsType = {\r\n  title: '输入框标题',\r\n  placeholder: '请输入...',\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Input, Typography } from 'antd'\r\nimport { type QuestionInputPropsType, questionInputDefaultProps } from './interface'\r\n\r\nconst { Paragraph } = Typography\r\n\r\nconst QuestionInput: FC<QuestionInputPropsType> = props => {\r\n  const { title, placeholder } = { ...questionInputDefaultProps, ...props }\r\n\r\n  return (\r\n    <div>\r\n      <Paragraph>{title}</Paragraph>\r\n      <div>\r\n        <Input placeholder={placeholder} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionInput\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport type { QuestionInputPropsType } from './interface'\r\n\r\nconst PropComponent: React.FC<QuestionInputPropsType> = props => {\r\n  const { title, placeholder, onChange, disabled } = props\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ title, placeholder })\r\n  }, [title, placeholder])\r\n\r\n  function handleValuesChange() {\r\n    onChange?.(form.getFieldsValue())\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      layout=\"vertical\"\r\n      initialValues={{ title, placeholder }}\r\n      form={form}\r\n      onValuesChange={handleValuesChange}\r\n      disabled={disabled}\r\n    >\r\n      <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入标题' }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"placeholder\" name=\"placeholder\">\r\n        <Input />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","// 问卷输入框组件\r\n\r\nimport Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport { questionInputDefaultProps } from './interface'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '输入框',\r\n  type: 'questionInput',\r\n  Component,\r\n  PropComponent,\r\n  defaultProps: questionInputDefaultProps,\r\n}\r\n","export type QuestionTitlePropsType = {\r\n  text?: string\r\n  level?: 1 | 2 | 3 | 4 | 5\r\n  isCenter?: boolean\r\n  onChange?: (newProps: QuestionTitlePropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const questionTitleDefaultProps: QuestionTitlePropsType = {\r\n  text: '一行标题',\r\n  level: 1,\r\n  isCenter: false,\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Typography } from 'antd'\r\nimport { questionTitleDefaultProps, type QuestionTitlePropsType } from './interface'\r\n\r\nconst { Title } = Typography\r\n\r\nconst QuestionTitle: FC<QuestionTitlePropsType> = props => {\r\n  const { text = '', level = 1, isCenter = false } = { ...questionTitleDefaultProps, ...props }\r\n\r\n  const genFontSize = (level: number) => {\r\n    if (level === 1) return '24px'\r\n    if (level === 2) return '20px'\r\n    if (level === 3) return '16px'\r\n    return '16px'\r\n  }\r\n  return (\r\n    <Title\r\n      level={level}\r\n      style={{\r\n        textAlign: isCenter ? 'center' : 'start',\r\n        fontSize: genFontSize(level),\r\n        marginBottom: '0',\r\n      }}\r\n    >\r\n      {text}\r\n    </Title>\r\n  )\r\n}\r\n\r\nexport default QuestionTitle\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input, Checkbox, Select } from 'antd'\r\nimport { type QuestionTitlePropsType } from './interface'\r\n\r\nconst PropComponent: React.FC<QuestionTitlePropsType> = props => {\r\n  const { text, level, isCenter, onChange, disabled } = props\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ text, level, isCenter })\r\n  }, [text, level, isCenter])\r\n\r\n  function handleValueChange() {\r\n    onChange?.(form.getFieldsValue())\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      onValuesChange={handleValueChange}\r\n      initialValues={{ text, level, isCenter }}\r\n      disabled={disabled}\r\n    >\r\n      <Form.Item\r\n        label=\"标题内容\"\r\n        name=\"text\"\r\n        rules={[{ required: true, message: '请输入标题内容' }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"层级\" name=\"level\">\r\n        <Select\r\n          options={[\r\n            { value: 1, text: 1 },\r\n            { value: 2, text: 2 },\r\n            { value: 3, text: 3 },\r\n          ]}\r\n        ></Select>\r\n      </Form.Item>\r\n      <Form.Item name=\"isCenter\" valuePropName=\"checked\">\r\n        <Checkbox>居中显示</Checkbox>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","// 问卷输入框组件\r\n\r\nimport Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport { questionTitleDefaultProps } from './interface'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '标题',\r\n  type: 'questionTitle',\r\n  Component,\r\n  PropComponent,\r\n  defaultProps: questionTitleDefaultProps,\r\n}\r\n","export type QuestionParagraphPropsType = {\r\n  text?: string\r\n  isCenter?: boolean\r\n\r\n  // 属性表单\r\n  onChange?: (newProps: QuestionParagraphPropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const questionParagraphDefaultProps: QuestionParagraphPropsType = {\r\n  text: '一行段落',\r\n  isCenter: false,\r\n}\r\n","import React from 'react'\r\nimport { type QuestionParagraphPropsType, questionParagraphDefaultProps } from './interface'\r\nimport { Typography } from 'antd'\r\n\r\nconst { Paragraph } = Typography\r\n\r\nconst Component: React.FC<QuestionParagraphPropsType> = props => {\r\n  const { text = '', isCenter = false } = { ...questionParagraphDefaultProps, ...props }\r\n\r\n  const textList = text.split('\\n')\r\n\r\n  return (\r\n    <Paragraph style={{ textAlign: isCenter ? 'center' : 'start', marginBottom: '0' }}>\r\n      {textList.map((t, index) => (\r\n        <span key={index}>\r\n          {index > 0 && <br />}\r\n          {t}\r\n        </span>\r\n      ))}\r\n    </Paragraph>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport { questionParagraphDefaultProps } from './interface'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '段落',\r\n  type: 'questionParagraph',\r\n  Component,\r\n  PropComponent,\r\n  defaultProps: questionParagraphDefaultProps,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Checkbox, Form, Input } from 'antd'\r\nimport type { QuestionParagraphPropsType } from './interface'\r\n\r\nconst PropComponent: React.FC<QuestionParagraphPropsType> = props => {\r\n  const { text, isCenter, onChange, disabled } = props\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ text, isCenter })\r\n  }, [text, isCenter])\r\n\r\n  function handleValueChange() {\r\n    onChange?.(form.getFieldsValue())\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onValuesChange={handleValueChange}\r\n      layout=\"vertical\"\r\n      initialValues={{ text, isCenter }}\r\n      disabled={disabled}\r\n    >\r\n      <Form.Item\r\n        label=\"段落内容\"\r\n        name=\"text\"\r\n        rules={[{ required: true, message: '请输入段落内容' }]}\r\n      >\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item name=\"isCenter\" valuePropName=\"checked\">\r\n        <Checkbox>居中显示</Checkbox>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","export type QuestionInfoPropsType = {\r\n  title?: string\r\n  desc?: string\r\n\r\n  onChange?: (newProps: QuestionInfoPropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const questionInfoDefaultProps: QuestionInfoPropsType = {\r\n  title: '问卷标题',\r\n  desc: '问卷描述',\r\n}\r\n","import Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport { questionInfoDefaultProps } from './interface'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '问卷信息',\r\n  type: 'questionInfo',\r\n  Component,\r\n  PropComponent,\r\n  defaultProps: questionInfoDefaultProps,\r\n}\r\n","import React from 'react'\r\nimport { QuestionInfoPropsType, questionInfoDefaultProps } from './interface'\r\nimport { Typography } from 'antd'\r\n\r\nconst Component: React.FC<QuestionInfoPropsType> = props => {\r\n  const { title, desc = '' } = { ...questionInfoDefaultProps, ...props }\r\n\r\n  const textList = desc.split('\\n')\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Typography.Title style={{ fontSize: '24px' }}>{title}</Typography.Title>\r\n      <Typography.Paragraph>\r\n        {textList.map((t, index) => (\r\n          <span key={index}>\r\n            {index > 0 && <br />}\r\n            {t}\r\n          </span>\r\n        ))}\r\n      </Typography.Paragraph>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import React, { useEffect } from 'react'\r\nimport { QuestionInfoPropsType } from './interface'\r\nimport { Form, Input } from 'antd'\r\n\r\nconst PropComponent: React.FC<QuestionInfoPropsType> = props => {\r\n  const { title, desc, onChange, disabled } = props\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ title, desc })\r\n  }, [title, desc])\r\n\r\n  function handleValuesChange() {\r\n    onChange?.(form.getFieldsValue())\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      initialValues={{ title, desc }}\r\n      disabled={disabled}\r\n      onValuesChange={handleValuesChange}\r\n    >\r\n      <Form.Item name=\"title\" label=\"标题\" rules={[{ required: true, message: '请输入标题' }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name=\"desc\" label=\"描述\">\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","export type QuestionTextareaPropsType = {\r\n  title?: string\r\n  placeholder?: string\r\n  onChange?: (newProps: QuestionTextareaPropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const questionTextareaDefaultProps: QuestionTextareaPropsType = {\r\n  title: '输入框标题',\r\n  placeholder: '请输入...',\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Input, Typography } from 'antd'\r\nimport { type QuestionTextareaPropsType, questionTextareaDefaultProps } from './interface'\r\n\r\nconst { Paragraph } = Typography\r\n\r\nconst QuestionTextarea: FC<QuestionTextareaPropsType> = props => {\r\n  const { title, placeholder } = { ...questionTextareaDefaultProps, ...props }\r\n\r\n  return (\r\n    <div>\r\n      <Paragraph>{title}</Paragraph>\r\n      <div>\r\n        <Input.TextArea placeholder={placeholder} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionTextarea\r\n","// 问卷输入框组件\r\n\r\nimport Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport { questionTextareaDefaultProps } from './interface'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '多行输入框',\r\n  type: 'questionTextarea',\r\n  Component,\r\n  PropComponent,\r\n  defaultProps: questionTextareaDefaultProps,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport type { QuestionTextareaPropsType } from './interface'\r\n\r\nconst PropComponent: React.FC<QuestionTextareaPropsType> = props => {\r\n  const { title, placeholder, onChange, disabled } = props\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ title, placeholder })\r\n  }, [title, placeholder])\r\n\r\n  function handleValuesChange() {\r\n    onChange?.(form.getFieldsValue())\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      layout=\"vertical\"\r\n      initialValues={{ title, placeholder }}\r\n      form={form}\r\n      onValuesChange={handleValuesChange}\r\n      disabled={disabled}\r\n    >\r\n      <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入标题' }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"placeholder\" name=\"placeholder\">\r\n        <Input />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","export type OptionType = {\r\n  value: string\r\n  text: string\r\n}\r\n\r\nexport type QuestionRadioPropsType = {\r\n  title?: string\r\n  isVertical?: boolean\r\n  options?: OptionType[]\r\n  value?: string\r\n\r\n  onChange?: (newComponent: QuestionRadioPropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const QuestionRadioDefaultProps: QuestionRadioPropsType = {\r\n  title: '单选标题',\r\n  isVertical: false,\r\n  options: [\r\n    { value: 'item1', text: '选项1' },\r\n    { value: 'item2', text: '选项2' },\r\n    { value: 'item3', text: '选项3' },\r\n  ],\r\n  value: '',\r\n}\r\n\r\n// 统计组件的属性类型\r\nexport type QuestionRadioStatPropsType = {\r\n  stat: Array<{ name: string; count: number }>\r\n}\r\n","import React from 'react'\r\nimport { QuestionRadioDefaultProps, QuestionRadioPropsType } from './interface'\r\nimport { Radio, Space, Typography } from 'antd'\r\n\r\nconst Component: React.FC<QuestionRadioPropsType> = props => {\r\n  const { title, options = [], value, isVertical } = { ...QuestionRadioDefaultProps, ...props }\r\n\r\n  return (\r\n    <div>\r\n      <Typography.Paragraph strong>{title}</Typography.Paragraph>\r\n      <Radio.Group value={value}>\r\n        <Space direction={isVertical ? 'vertical' : 'horizontal'}>\r\n          {options.map(opt => {\r\n            const { value, text } = opt\r\n            return (\r\n              <Radio key={value} value={value}>\r\n                {text}\r\n              </Radio>\r\n            )\r\n          })}\r\n        </Space>\r\n      </Radio.Group>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import React, { useEffect } from 'react'\r\nimport { OptionType, QuestionRadioPropsType } from './interface'\r\nimport { Button, Checkbox, Form, Input, Select, Space } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { nanoid } from '@reduxjs/toolkit'\r\n\r\nconst PropComponent: React.FC<QuestionRadioPropsType> = props => {\r\n  const { title, isVertical, value, options = [], onChange, disabled } = props\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      title,\r\n      isVertical,\r\n      value,\r\n      options,\r\n    })\r\n  }, [title, isVertical, value, options])\r\n\r\n  function handleValuesChange() {\r\n    const newValues = form.getFieldsValue()\r\n    const { options = [] } = newValues\r\n    options.forEach((opt: OptionType) => {\r\n      if (opt.value) return\r\n      opt.value = nanoid(5)\r\n    })\r\n    onChange?.(newValues)\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      initialValues={{ title, isVertical, value, options }}\r\n      onValuesChange={handleValuesChange}\r\n      disabled={disabled}\r\n    >\r\n      <Form.Item name=\"title\" label=\"标题\" rules={[{ required: true, message: '请输入标题' }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name=\"options\" label=\"选项\">\r\n        <Form.List name=\"options\">\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(({ key, name }, index) => {\r\n                return (\r\n                  <Space key={key} align=\"baseline\">\r\n                    <Form.Item\r\n                      name={[name, 'text']}\r\n                      rules={[\r\n                        { required: true, message: '请输入选项内容' },\r\n                        {\r\n                          validator: (_, text) => {\r\n                            const { options = [] } = form.getFieldsValue()\r\n\r\n                            let num = 0\r\n                            options.forEach((opt: OptionType) => {\r\n                              if (opt.text === text) num++ // 记录text相同的个数, 只有一个\r\n                            })\r\n                            if (num === 1) return Promise.resolve()\r\n                            return Promise.reject(new Error('选项内容不能相同'))\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入选项内容\" />\r\n                    </Form.Item>\r\n                    {/* 删除按钮 */}\r\n                    {index > 1 && (\r\n                      <MinusCircleOutlined\r\n                        onClick={() => remove(name)}\r\n                        onPointerEnterCapture={undefined}\r\n                        onPointerLeaveCapture={undefined}\r\n                      />\r\n                    )}\r\n                  </Space>\r\n                )\r\n              })}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"link\"\r\n                  block\r\n                  onClick={() => add({ text: '', value: '' })}\r\n                  icon={\r\n                    <PlusOutlined\r\n                      onPointerEnterCapture={undefined}\r\n                      onPointerLeaveCapture={undefined}\r\n                    />\r\n                  }\r\n                >\r\n                  添加选项\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n      </Form.Item>\r\n      <Form.Item name=\"value\" label=\"默认选中\">\r\n        <Select\r\n          value={value}\r\n          options={options.map(({ text, value }) => ({ value, label: text || '' }))}\r\n        ></Select>\r\n      </Form.Item>\r\n      <Form.Item name=\"isVertical\" valuePropName=\"checked\">\r\n        <Checkbox>是否垂直</Checkbox>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","import React from 'react'\r\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts'\r\nimport { QuestionRadioStatPropsType } from './interface'\r\nimport { STAT_COLORS } from '../../../constant'\r\n\r\nfunction format(n: number) {\r\n  return (n * 100).toFixed(2)\r\n}\r\n\r\nfunction StatComponent({ stat }: QuestionRadioStatPropsType) {\r\n  // count求和\r\n  const sum = React.useMemo(() => {\r\n    let s = 0\r\n    stat.forEach(i => (s += i.count))\r\n    return s\r\n  }, [stat])\r\n\r\n  return (\r\n    <div style={{ width: '300px', height: '400px' }}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart>\r\n          <Pie\r\n            dataKey=\"count\"\r\n            data={stat}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius={50}\r\n            fill=\"#8884d8\"\r\n            label={i => `${i.name}: ${format(i.count / sum)}%`}\r\n          >\r\n            {stat.map((i, index) => {\r\n              return <Cell key={index} fill={STAT_COLORS[index]} />\r\n            })}\r\n          </Pie>\r\n          <Tooltip />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatComponent\r\n","import Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport StatComponent from './StatComponent'\r\nimport { QuestionRadioDefaultProps } from './interface'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '单选',\r\n  type: 'questionRadio',\r\n  Component,\r\n  PropComponent,\r\n  StatComponent,\r\n  defaultProps: QuestionRadioDefaultProps,\r\n}\r\n","export type OptionType = {\r\n  value: string\r\n  text: string\r\n  checked: boolean\r\n}\r\n\r\nexport interface QuestionCheckboxPropsType {\r\n  title?: string\r\n  isVertical?: boolean\r\n  list?: OptionType[]\r\n\r\n  onChange?: (value: QuestionCheckboxPropsType) => void\r\n  disabled?: boolean\r\n}\r\n\r\nexport const questionCheckboxDefaultProps: QuestionCheckboxPropsType = {\r\n  title: '多选标题',\r\n  isVertical: false,\r\n  list: [\r\n    { value: 'item1', text: '选项1', checked: false },\r\n    { value: 'item2', text: '选项2', checked: false },\r\n    { value: 'item3', text: '选项3', checked: false },\r\n  ],\r\n}\r\n\r\nexport type QuestionCheckboxStatType = {\r\n  stat: Array<{ name: string; count: number }>\r\n}\r\n","import React, { FC } from 'react'\r\nimport { QuestionCheckboxPropsType, questionCheckboxDefaultProps } from './interface'\r\nimport { Checkbox, Space, Typography } from 'antd'\r\n\r\nconst QuestionCheckBox: FC<QuestionCheckboxPropsType> = props => {\r\n  const { title, isVertical, list = [] } = { ...questionCheckboxDefaultProps, ...props }\r\n\r\n  return (\r\n    <div>\r\n      <Typography.Paragraph strong>{title}</Typography.Paragraph>\r\n      <Space direction={isVertical ? 'vertical' : 'horizontal'}>\r\n        {list.map(opt => {\r\n          const { value, text, checked } = opt\r\n\r\n          return (\r\n            <Checkbox key={value} value={value} checked={checked}>\r\n              {text}\r\n            </Checkbox>\r\n          )\r\n        })}\r\n      </Space>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionCheckBox\r\n","import React, { useEffect } from 'react'\r\nimport { OptionType, QuestionCheckboxPropsType, questionCheckboxDefaultProps } from './interface'\r\nimport { Button, Checkbox, Form, Input, Space } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { nanoid } from '@reduxjs/toolkit'\r\n\r\nconst PropComponent: React.FC<QuestionCheckboxPropsType> = props => {\r\n  const {\r\n    title,\r\n    isVertical,\r\n    list = [],\r\n    onChange,\r\n    disabled,\r\n  } = { ...questionCheckboxDefaultProps, ...props }\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ title, isVertical, list })\r\n  }, [title, isVertical, list])\r\n\r\n  function handleValuesChange() {\r\n    const newValues = form.getFieldsValue()\r\n    const { list } = newValues\r\n    list.forEach((opt: { value: string }) => {\r\n      if (opt.value) return\r\n      opt.value = nanoid(5)\r\n    })\r\n    onChange?.(newValues)\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      layout=\"vertical\"\r\n      form={form}\r\n      initialValues={{ title, isVertical, list }}\r\n      disabled={disabled}\r\n      onValuesChange={handleValuesChange}\r\n    >\r\n      <Form.Item name=\"title\" label=\"标题\" rules={[{ required: true, message: '请输入标题' }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name=\"list\" label=\"选项\">\r\n        <Form.List name=\"list\">\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(({ key, name }, index) => {\r\n                return (\r\n                  <Space key={key} align=\"baseline\">\r\n                    <Form.Item name={[name, 'checked']} valuePropName=\"checked\">\r\n                      <Checkbox></Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name={[name, 'text']}\r\n                      rules={[\r\n                        { required: true, message: '请输入选项内容' },\r\n                        {\r\n                          validator: (_, text) => {\r\n                            const { list = [] } = form.getFieldsValue()\r\n\r\n                            let num = 0\r\n                            list.forEach((opt: OptionType) => {\r\n                              if (opt.text === text) num++ // 记录text相同的个数, 只有一个\r\n                            })\r\n                            if (num === 1) return Promise.resolve()\r\n                            return Promise.reject(new Error('选项内容不能相同'))\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input placeholder=\"请输入选项内容\" />\r\n                    </Form.Item>\r\n                    {/* 删除按钮 */}\r\n                    {index > 0 && (\r\n                      <MinusCircleOutlined\r\n                        onClick={() => remove(name)}\r\n                        onPointerEnterCapture={undefined}\r\n                        onPointerLeaveCapture={undefined}\r\n                      />\r\n                    )}\r\n                  </Space>\r\n                )\r\n              })}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"link\"\r\n                  block\r\n                  onClick={() => add({ text: '', value: '', checked: false })}\r\n                  icon={\r\n                    <PlusOutlined\r\n                      onPointerEnterCapture={undefined}\r\n                      onPointerLeaveCapture={undefined}\r\n                    />\r\n                  }\r\n                >\r\n                  添加选项\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n      </Form.Item>\r\n      <Form.Item name=\"isVertical\" valuePropName=\"checked\">\r\n        <Checkbox>是否垂直</Checkbox>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PropComponent\r\n","import React from 'react'\r\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\r\nimport { QuestionCheckboxStatType } from './interface'\r\n\r\nfunction StatComponent({ stat }: QuestionCheckboxStatType) {\r\n  return (\r\n    <div style={{ width: '400px', height: '300px' }}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={400}\r\n          height={300}\r\n          data={stat}\r\n          margin={{ top: 5, right: 30, left: 0, bottom: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatComponent\r\n","import Component from './Component'\r\nimport PropComponent from './PropComponent'\r\nimport { questionCheckboxDefaultProps } from './interface'\r\nimport StatComponent from './StatComponent'\r\n\r\nexport * from './interface'\r\n\r\nexport default {\r\n  title: '多选',\r\n  type: 'questionCheckbox',\r\n  Component,\r\n  PropComponent,\r\n  StatComponent,\r\n  defaultProps: questionCheckboxDefaultProps,\r\n}\r\n","import { FC } from 'react'\r\nimport QuestionInputConf, { type QuestionInputPropsType } from './QuestionInput'\r\nimport QuestionTitleConf, { type QuestionTitlePropsType } from './QuestionTitle'\r\nimport QuestionParagraphConf, { type QuestionParagraphPropsType } from './QuestionParagraph'\r\nimport QuestionInfoConf, { type QuestionInfoPropsType } from './QuestionInfo'\r\nimport QuestionTextareaConf, { type QuestionTextareaPropsType } from './QuestionTextarea'\r\nimport QuestionRadioConf, {\r\n  type QuestionRadioPropsType,\r\n  type QuestionRadioStatPropsType,\r\n} from './QuestionRadio'\r\nimport QuestionCheckboxConf, {\r\n  type QuestionCheckboxPropsType,\r\n  type QuestionCheckboxStatType,\r\n} from './QuestionCheckbox'\r\n\r\n// 各个组件的类型\r\nexport type ComponentPropsType = QuestionInputPropsType &\r\n  QuestionTitlePropsType &\r\n  QuestionParagraphPropsType &\r\n  QuestionInfoPropsType &\r\n  QuestionTextareaPropsType &\r\n  QuestionRadioPropsType &\r\n  QuestionCheckboxPropsType\r\n\r\n// 各个组件的统计实现类型\r\ntype ComponentStatPropsType = QuestionRadioStatPropsType & QuestionCheckboxStatType\r\n\r\n// 组件的配置类型\r\nexport type ComponentConfType = {\r\n  title: string\r\n  type: string\r\n  Component: FC<ComponentPropsType>\r\n  PropComponent: FC<ComponentPropsType>\r\n  StatComponent?: FC<ComponentStatPropsType>\r\n  defaultProps: ComponentPropsType\r\n}\r\n\r\n// 全部组件配置列表\r\nconst componentConfList: ComponentConfType[] = [\r\n  QuestionTitleConf,\r\n  QuestionInputConf,\r\n  QuestionParagraphConf,\r\n  QuestionInfoConf,\r\n  QuestionTextareaConf,\r\n  QuestionRadioConf,\r\n  QuestionCheckboxConf,\r\n]\r\n\r\n// 组件分组\r\nexport const componentConfGroup = [\r\n  {\r\n    groupId: 'text',\r\n    groupName: '文本显示',\r\n    components: [QuestionInfoConf, QuestionTitleConf, QuestionParagraphConf],\r\n  },\r\n  {\r\n    groupId: 'input',\r\n    groupName: '用户输入',\r\n    components: [QuestionInputConf, QuestionTextareaConf],\r\n  },\r\n  {\r\n    groupId: 'chooseGroup',\r\n    groupName: '用户选择',\r\n    components: [QuestionRadioConf, QuestionCheckboxConf],\r\n  },\r\n]\r\nexport function getComponentConfByType(type: string) {\r\n  return componentConfList.find(c => c.type === type)\r\n}\r\n","import { useAppSelector } from '../store/hooks'\r\n\r\nfunction useGetComponentInfo() {\r\n  const components = useAppSelector(state => state.components.present)\r\n\r\n  const { componentList, selectedId, copiedComponent } = components\r\n  const selectedComponent = componentList.find(component => component.fe_id === selectedId)\r\n\r\n  return {\r\n    componentList,\r\n    selectedId,\r\n    selectedComponent,\r\n    copiedComponent,\r\n  }\r\n}\r\n\r\nexport default useGetComponentInfo\r\n","import { useAppSelector } from '../store/hooks'\r\n\r\nfunction useGetPageInfo() {\r\n  const pageInfo = useAppSelector(state => state.pageInfo)\r\n  return pageInfo\r\n}\r\n\r\nexport default useGetPageInfo\r\n","import { useParams } from 'react-router-dom'\r\nimport { useRequest } from 'ahooks'\r\nimport { getQuestionService } from '../services/question'\r\nimport { useEffect } from 'react'\r\nimport { useAppDispatch } from '../store/hooks'\r\nimport { resetComponents } from '../store/componentsReducer'\r\nimport { resetPageInfo } from '../store/pageInfoReducer'\r\n\r\nfunction useLoadQuestionData() {\r\n  const { id = '' } = useParams()\r\n  const dispatch = useAppDispatch()\r\n\r\n  // ajax加载\r\n  const { run, loading, data, error } = useRequest(\r\n    async (id: string) => {\r\n      if (!id) throw new Error('没有问卷')\r\n      const data = await getQuestionService(id)\r\n\r\n      return data\r\n    },\r\n    {\r\n      manual: true,\r\n    }\r\n  )\r\n\r\n  // 根据获取的 data 设置，redux store\r\n  useEffect(() => {\r\n    if (!data) return\r\n\r\n    const {\r\n      title = '',\r\n      desc = '',\r\n      js = '',\r\n      css = '',\r\n      isPublished = false,\r\n      componentList = [],\r\n    } = data\r\n\r\n    let selectedId = ''\r\n    if (componentList.length > 0) {\r\n      selectedId = componentList[0].fe_id\r\n    }\r\n\r\n    // 把 componentList 存入 redux store\r\n    dispatch(resetComponents({ componentList, selectedId, copiedComponent: null }))\r\n\r\n    // 把 pageInfo 存入redux store\r\n    dispatch(resetPageInfo({ title, desc, js, css, isPublished }))\r\n  }, [data])\r\n\r\n  // 判断id变化， 执行 ajax 加载问卷数据\r\n  useEffect(() => {\r\n    run(id)\r\n  }, [id])\r\n\r\n  return { loading, error }\r\n}\r\n\r\nexport default useLoadQuestionData\r\n"],"names":["questionInputDefaultProps","title","placeholder","Paragraph","Typography","props","_jsxs","children","_jsx","Input","type","Component","PropComponent","onChange","disabled","form","Form","useForm","useEffect","setFieldsValue","layout","initialValues","onValuesChange","getFieldsValue","Item","label","name","rules","required","message","defaultProps","questionTitleDefaultProps","text","level","isCenter","Title","style","textAlign","fontSize","genFontSize","marginBottom","Select","options","value","valuePropName","Checkbox","questionParagraphDefaultProps","textList","split","map","t","index","TextArea","questionInfoDefaultProps","desc","questionTextareaDefaultProps","QuestionRadioDefaultProps","isVertical","strong","Radio","Space","direction","opt","newValues","forEach","nanoid","List","fields","_ref","add","remove","_Fragment","_ref2","key","align","validator","_","num","Promise","resolve","reject","Error","MinusCircleOutlined","onClick","onPointerEnterCapture","undefined","onPointerLeaveCapture","Button","block","icon","PlusOutlined","_ref3","StatComponent","stat","sum","React","s","i","count","width","height","ResponsiveContainer","PieChart","Pie","dataKey","data","cx","cy","outerRadius","fill","concat","toFixed","Cell","STAT_COLORS","Tooltip","questionCheckboxDefaultProps","list","checked","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","componentConfList","QuestionTitleConf","QuestionInputConf","QuestionParagraphConf","QuestionInfoConf","QuestionTextareaConf","QuestionRadioConf","QuestionCheckboxConf","componentConfGroup","groupId","groupName","components","getComponentConfByType","find","c","useAppSelector","state","present","componentList","selectedId","copiedComponent","selectedComponent","component","fe_id","pageInfo","id","useParams","dispatch","useAppDispatch","run","loading","error","useRequest","async","getQuestionService","manual","js","css","isPublished","length","resetComponents","resetPageInfo"],"sourceRoot":""}